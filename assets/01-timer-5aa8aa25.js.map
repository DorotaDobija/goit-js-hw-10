{"version":3,"file":"01-timer-5aa8aa25.js","sources":["../../src/js/01-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\n\nconst btn = document.querySelector(\"button\");\nconst daysEl = document.querySelector(\"span[data-days]\");\nconst hoursEl = document.querySelector(\"span[data-hours]\");\nconst minutesEl = document.querySelector(\"span[data-minutes]\");\nconst secondsEl = document.querySelector(\"span[data-seconds]\");\nconst timerEl = document.querySelector(\".timer\")\n\nlet userSelectedDate = 0;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\nonClose(selectedDates) {\n  if (selectedDates[0].getTime() < Date.now()) {\n    window.alert(\"Please choose a date in the future\");\n    daysEl.textContent = `00`;\n    hoursEl.textContent = `00`;\n    minutesEl.textContent = `00`;\n    secondsEl.textContent = `00`;\n    btn.setAttribute(\"disabled\", \"\")\n  } else if (selectedDates[0].getTime() > Date.now()) {\n    btn.removeAttribute(\"disabled\");\n    userSelectedDate = selectedDates[0].getTime();\n    dateFormatToAdd(timeDiference(userSelectedDate, convertMs));\n  }\n  },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nconst timeDiference = (someDate, callback) => {\n    const timeNow = Date.now();\n    const counteredTime = someDate - timeNow ;\n    return callback(counteredTime);\n}\n\nconst convertMs = (ms) => {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n} \n\n\n\nconst dateFormatToAdd = ({ days, hours, minutes, seconds }) => {\n    daysEl.textContent = `${days}`;\n    hoursEl.textContent = `${hours}`;\n    minutesEl.textContent = `${minutes}`;\n    secondsEl.textContent = `${seconds}`;\n}\n\n\n\n\n\n"],"names":["btn","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","options","selectedDates","dateFormatToAdd","timeDiference","convertMs","flatpickr","someDate","callback","timeNow","counteredTime","ms","days","hours","minutes","seconds"],"mappings":"yCAIA,MAAMA,EAAM,SAAS,cAAc,QAAQ,EACrCC,EAAS,SAAS,cAAc,iBAAiB,EACjDC,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAY,SAAS,cAAc,oBAAoB,EACvDC,EAAY,SAAS,cAAc,oBAAoB,EAC7C,SAAS,cAAc,QAAQ,EAE/C,IAAIC,EAAmB,EAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACnB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAE,QAAO,EAAK,KAAK,OACpC,OAAO,MAAM,oCAAoC,EACjDN,EAAO,YAAc,KACrBC,EAAQ,YAAc,KACtBC,EAAU,YAAc,KACxBC,EAAU,YAAc,KACxBJ,EAAI,aAAa,WAAY,EAAE,GACtBO,EAAc,CAAC,EAAE,QAAO,EAAK,KAAK,QAC3CP,EAAI,gBAAgB,UAAU,EAC9BK,EAAmBE,EAAc,CAAC,EAAE,QAAO,EAC3CC,EAAgBC,EAAcJ,EAAkBK,CAAS,CAAC,EAE3D,CACH,EAEAC,EAAU,mBAAoBL,CAAO,EAErC,MAAMG,EAAgB,CAACG,EAAUC,IAAa,CAC1C,MAAMC,EAAU,KAAK,MACfC,EAAgBH,EAAWE,EACjC,OAAOD,EAASE,CAAa,CACjC,EAEML,EAAaM,GAAO,CAMxB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,EAIMZ,EAAkB,CAAC,CAAE,KAAAS,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,IAAO,CAC3DnB,EAAO,YAAc,GAAGgB,CAAI,GAC5Bf,EAAQ,YAAc,GAAGgB,CAAK,GAC9Bf,EAAU,YAAc,GAAGgB,CAAO,GAClCf,EAAU,YAAc,GAAGgB,CAAO,EACtC"}